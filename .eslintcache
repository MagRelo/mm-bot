[{"/Users/mattlovan/Projects/mm-bot/src/index.js":"1","/Users/mattlovan/Projects/mm-bot/src/App.js":"2","/Users/mattlovan/Projects/mm-bot/src/components/header.js":"3","/Users/mattlovan/Projects/mm-bot/src/sockets.js":"4","/Users/mattlovan/Projects/mm-bot/src/components/util.js":"5","/Users/mattlovan/Projects/mm-bot/src/components/consensusButton.js":"6","/Users/mattlovan/Projects/mm-bot/src/components/beachballButton.js":"7","/Users/mattlovan/Projects/mm-bot/src/components/clapButton.js":"8","/Users/mattlovan/Projects/mm-bot/src/components/longpress.js":"9"},{"size":680,"mtime":1608504839287,"results":"10","hashOfConfig":"11"},{"size":2310,"mtime":1608754199276,"results":"12","hashOfConfig":"11"},{"size":3282,"mtime":1608322738411,"results":"13","hashOfConfig":"11"},{"size":941,"mtime":1608753773470,"results":"14","hashOfConfig":"11"},{"size":1616,"mtime":1608401538341,"results":"15","hashOfConfig":"11"},{"size":968,"mtime":1608330489483,"results":"16","hashOfConfig":"11"},{"size":1125,"mtime":1608754512702,"results":"17","hashOfConfig":"11"},{"size":3047,"mtime":1608753764222,"results":"18","hashOfConfig":"11"},{"size":1612,"mtime":1608737163771,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fjw2v6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/mattlovan/Projects/mm-bot/src/index.js",[],["42","43"],"/Users/mattlovan/Projects/mm-bot/src/App.js",["44"],"import React, { useEffect, useState } from 'react';\nimport { initiateSocket, disconnectSocket, subscribeToChat } from './sockets';\n\nimport { getParams, formatCurrency } from './components/util';\n\nimport ConsensusButton from './components/consensusButton';\nimport BeachBallButton from './components/beachballButton';\nimport ClapButton from './components/clapButton';\n\n// Custom List\nexport const CustomListContext = React.createContext({});\n\nfunction App() {\n  // get URL params\n  const params = getParams(window.location);\n  const accessCode = params.accessCode;\n\n  // get from params\n  // const [room, setRoom] = useState(params.room || 'general');\n  const [user, setUser] = useState(null);\n\n  // connect\n  useEffect(() => {\n    initiateSocket({ room: 'general', discordId: accessCode });\n\n    subscribeToChat((err, data) => {\n      if (err) return console.log(err);\n      setUser(data);\n    });\n\n    return () => {\n      disconnectSocket();\n    };\n  }, [accessCode]);\n\n  return (\n    <CustomListContext.Provider value={{}}>\n      {user ? (\n        <div className=\"App\">\n          <div className=\"page-container\">\n            <div className=\"user-info-grid\">\n              <div className=\"name\">{user.username}</div>\n              <div className=\"balance\">{formatCurrency(user.mmBalance)}</div>\n            </div>\n\n            <div className=\"crowd-actions-grid\">\n              <div className=\"beach-ball-section\">\n                <BeachBallButton\n                  active={true}\n                  title=\"Wave!\"\n                  type=\"wave\"\n                  cost=\"10\"\n                  payoff=\"30\"\n                  threshold=\"60%\"\n                />\n              </div>\n            </div>\n\n            <div className=\"crowd-actions-grid\">\n              {/* <ConsensusButton\n              active={false}\n              title=\"Start a wave\"\n              type=\"wave\"\n              cost=\"10\"\n              payoff=\"30\"\n              threshold=\"60%\"\n            /> */}\n            </div>\n\n            <div className=\"user-actions-grid\">\n              <div className=\"clap-section\">\n                <ClapButton userName={user.name} discordId={user.discordId} />\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </CustomListContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/mattlovan/Projects/mm-bot/src/components/header.js",["45","46","47"],"/Users/mattlovan/Projects/mm-bot/src/sockets.js",[],"/Users/mattlovan/Projects/mm-bot/src/components/util.js",[],"/Users/mattlovan/Projects/mm-bot/src/components/consensusButton.js",["48","49"],"import React, { useState, useEffect } from 'react';\n// import { Link, globalHistory, useLocation } from '@reach/router';\n// import { createConnection } from 'mongoose';\n\nexport default ConsensusButton;\nfunction ConsensusButton({ active, type, title, cost, payoff, threshold }) {\n  // params:\n  // - active\n  // - type\n  // - title\n  // - cost\n  // - payoff\n  // - threshold\n  // - timer\n\n  // states:\n  // - inactive => can propose\n  // - active => can vote\n\n  // const { activeSession, user } = useContext(AuthContext);\n  // const [active, setActive] = useState(active);\n\n  // useEffect(() => {\n  //   return globalHistory.listen((action) => {\n  //     setMenuOpen(false);\n  //   });\n  // }, []);\n\n  return (\n    <div>\n      {active ? (\n        <div>\n          <button>Confirm</button>\n          <button>reject</button>\n        </div>\n      ) : (\n        <div>\n          <button className=\"consensus-button\">{title}</button>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/mattlovan/Projects/mm-bot/src/components/beachballButton.js",["50","51"],"/Users/mattlovan/Projects/mm-bot/src/components/clapButton.js",["52"],"import React, { useState } from 'react';\nimport useDimensions from 'react-use-dimensions';\n\nimport { sendClap } from '../sockets';\nimport useLongPress from './longpress';\n\nexport default function ClapButton({ roomNumber, discordId, userName }) {\n  const [ref, { x, y, width }] = useDimensions();\n\n  const onLongPress = () => {\n    console.log('longclick triggered');\n\n    sendClap({ roomNumber, discordId, userName, amount: 10 });\n    explode(x + width / 2, y + width / 2, width);\n  };\n\n  const onClick = (e) => {\n    console.log('click triggered');\n\n    sendClap({ roomNumber, discordId, userName, amount: 1 });\n    explode(x + width / 2, y + width / 2, width);\n  };\n\n  const defaultOptions = {\n    shouldPreventDefault: true,\n    delay: 800,\n  };\n  const longPressEvent = useLongPress(onLongPress, onClick, defaultOptions);\n\n  return (\n    <div style={{ position: 'sticky' }}>\n      <button {...longPressEvent} ref={ref} className=\"clap-button\">\n        CLAP\n      </button>\n    </div>\n  );\n}\n\n//- Explosion\n//- adapted from \"Anchor Click Canvas Animation\" by Nick Sheffield\n//- https://codepen.io/nicksheffield/pen/NNEoLg/\n\nconst colors = ['#00FF00', '#000', 'yellow'];\nconst bubbles = 25;\n\nconst explode = (x, y, width) => {\n  let particles = [];\n  let ratio = window.devicePixelRatio;\n  let c = document.createElement('canvas');\n  let ctx = c.getContext('2d');\n\n  console.log(x, y, width);\n\n  c.style.position = 'absolute';\n  c.style.left = x - 100 + 'px';\n  c.style.top = y - 100 + 'px';\n  c.style.pointerEvents = 'none';\n  c.style.width = width + 'px';\n  c.style.height = width + 'px';\n  c.style.zIndex = 100;\n  c.width = width * ratio;\n  c.height = width * ratio;\n\n  document.body.appendChild(c);\n\n  for (var i = 0; i < bubbles; i++) {\n    particles.push({\n      x: c.width / 2,\n      y: c.height / 2,\n      radius: r(20, 30),\n      color: colors[Math.floor(Math.random() * colors.length)],\n      rotation: r(0, 360, true),\n      speed: r(8, 20),\n      friction: 0.9,\n      opacity: r(0, 0.5, true),\n      yVel: 0,\n      gravity: 0.1,\n    });\n  }\n\n  render(particles, ctx, c.width, c.height);\n  setTimeout(() => document.body.removeChild(c), 1000);\n};\n\nconst render = (particles, ctx, width, height) => {\n  requestAnimationFrame(() => render(particles, ctx, width, height));\n  ctx.clearRect(0, 0, width, height);\n\n  particles.forEach((p, i) => {\n    p.x += p.speed * Math.cos((p.rotation * Math.PI) / 180);\n    p.y += p.speed * Math.sin((p.rotation * Math.PI) / 180);\n\n    p.opacity -= 0.01;\n    p.speed *= p.friction;\n    p.radius *= p.friction;\n    p.yVel += p.gravity;\n    p.y += p.yVel;\n\n    if (p.opacity < 0 || p.radius < 0) return;\n\n    ctx.beginPath();\n    ctx.globalAlpha = p.opacity;\n    ctx.fillStyle = p.color;\n    ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n  });\n\n  return ctx;\n};\n\nconst r = (a, b, c) =>\n  parseFloat(\n    (Math.random() * ((a ? a : 1) - (b ? b : 0)) + (b ? b : 0)).toFixed(\n      c ? c : 0\n    )\n  );\n\n// document.querySelector('.js-explosion').addEventListener('mouseover', e => );\n","/Users/mattlovan/Projects/mm-bot/src/components/longpress.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":18},{"ruleId":"57","severity":1,"message":"63","line":8,"column":20,"nodeType":"59","messageId":"60","endLine":8,"endColumn":31},{"ruleId":"57","severity":1,"message":"64","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"64","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"64","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'ConsensusButton' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'menuOpen' is assigned a value but never used.","'setMenuOpen' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]